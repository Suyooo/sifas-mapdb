<% if (hasNoteMap) { %>
    <div class="row nomargin">
        <div class="col l6">
            <b><%- lang.songinfo.note_count %>:</b> <%- lang.noteCount(mapInfo.noteCount) %><br>
            <b><%- lang.songinfo.note_count_ac %>:</b> <%- lang.noteCount(mapInfo.totalACNotes) %>
            (<%- mapInfo.totalACNotesPercentage %>)<br>
            <b><%- lang.songinfo.note_damage_total %>:</b> <%- lang.numberFormat(mapInfo.totalNoteDamage) %>
        </div>
        <div class="col l6">
            <b><%- lang.songinfo.ac_reward_total %>:</b> <%- mapInfo.totalACReward %>
            <% if (mapInfo.hasActualSongLength) { %>
                <br>
                <b><%- lang.songinfo.song_length %>:</b> <%- mapInfo.songLength %>
            <% } %>
        </div>
    </div>
    <div class="scale">
        <div class="header"><%- lang.scale.label %></div>
        <div class="time"><%- lang.scale.time %></div>
        <div class="turns"><%- lang.scale.turns %></div>
    </div>
    <div class="notebarcontainer" tabindex="-1">
        <div class="notebar" style="--markerlayers: <%- mapInfo.markerLayerCount %>"
             data-totaltime="<%- (mapInfo.mapLength / 98 * 100).toFixed(3) %>">

            <% for (const ac of appealChances) { %>
                <div data-ac="<%- ac.index %>" class="appealchance <%- ac.cssClass %>"
                     style="--time-pos: <%- (ac.timePosition * 98 + 1).toFixed(3) %>%;
                             --time-len: <%- (ac.timeLength * 98).toFixed(3) %>%;
                             --turn-pos: <%- (ac.turnPosition * 98 + 1).toFixed(3) %>%;
                             --turn-len: <%- (ac.turnLength * 98).toFixed(3) %>%;">&nbsp;
                </div>
            <% } %>
            <% for (const note of notes) { %>
                <div class="note <%- note.cssClass %> <%- note.hasGimmick ? "gimmicked" : "" %>"
                     style="--time-pos: calc(<%- (note.timePosition * 98 + 1).toFixed(3) %>% - 1px);
                             --turn-pos: calc(<%- (note.turnPosition * 98 + 1).toFixed(3) %>% - 1px);">&nbsp;
                </div>

                <% if (note.isHold) { %>
                    <div class="hold <%- note.cssClass %>"
                         style="--time-pos: calc(<%- (note.timePosition * 98 + 1).toFixed(3) %>% - 1px);
                                 --time-len: <%- (note.timeLength * 98).toFixed(3) %>%;
                                 --turn-pos: calc(<%- (note.turnPosition * 98 + 1).toFixed(3) %>% - 1px);
                                 --turn-len: <%- (note.turnLength * 98).toFixed(3) %>%;">&nbsp;
                    </div>
                <% } %>

                <% if (note.hasGimmick) { %>
                    <div class="gimmick" data-gimmick="<%- note.gimmickMarker.gimmickIndex %>"
                         data-npos="<%- note.gimmickMarker.noteIndex + 1 %>"
                         <% if (note.gimmickMarker.hasSlotNo) { %>data-slot="<%- note.gimmickMarker.slotNo + 1 %>"
                            <% } %>
                         style="--gimmicklayer: <%- note.gimmickMarker.globalLayer %>;
                                 --gimmicklayer-filtered: <%- note.gimmickMarker.thisGimmickLayer %>;
                                 --time-pos: <%- (note.gimmickMarker.timePosition * 98 + 1).toFixed(3) %>%;
                                 --time-len: <%- note.gimmickMarker.hasLength ? (note.gimmickMarker.timeLength * 98).toFixed(3) : 0 %>%;
                                 --turn-pos: <%- (note.gimmickMarker.turnPosition * 98 + 1).toFixed(3) %>%;
                                 --turn-len: <%- note.gimmickMarker.hasLength ? (note.gimmickMarker.turnLength * 98).toFixed(3) : 0 %>%;
                                 ">
                        <div class="gimmickmarker"><%- note.gimmickMarker.gimmickIndex + 1 %></div>
                        <% if (note.gimmickMarker.hasLength) { %>
                            <div class="gimmicklength">&nbsp;</div>
                        <% } %>
                    </div>
                <% } %>

                <% if (note.index % 5 === 4) { %>
                    <div class="marker <%- (note.index % 50 === 49) ? 'fifty' : ((note.index % 10 === 9) ? 'ten' : 'five') %>"
                         style="--time-pos: calc(<%- (note.timePosition * 98 + 1).toFixed(3) %>% - 1em);
                                 --turn-pos: calc(<%- ((note.index / (mapInfo.noteCount - 1)) * 98 + 1).toFixed(3) %>% - 1em)">
                        |<br><%- ((note.index + 1) % 10 === 0) ? (note.index + 1) : "&nbsp;" %>
                    </div>
                <% } %>
            <% } %>
        </div>
    </div>
<% } else { %>
    <div class="row" style="margin-top: 1em; text-align: center">(<%- lang.songinfo.no_map %>)</div>
<% } %>

<div class="row nomargin detailinfo-container">
    <div class="col l6 detailinfo">
        <h5><%- lang.gimmicks.title %></h5>
        <div>
            <div>
                <%- (hasSongGimmicks && songGimmicks.length > 1)
                        ? lang.gimmicks.song_gimmick
                        : lang.gimmicks.song_gimmick_multiple %>
            </div>
            <div>
                <% if (hasSongGimmicks) { %>
                    <% for (const songGimmick of songGimmicks) { %>
                        <div class="songgimmick">
                            <% if (songGimmicks.length > 1) { %>
                                <div class="number"><%- String.fromCharCode(9312 /* ① */ + songGimmick.index) %></div>
                            <% } %>
                            <div class="text">
                                <%- lang.songGimmick(songGimmick.gimmick.effect_type,
                                        songGimmick.gimmick.effect_amount, songGimmick.gimmick.target,
                                        songGimmick.gimmick.finish_type, songGimmick.gimmick.finish_amount) %><br>
                                <b><%- lang.gimmicks.song_gimmick_cleansable %>:</b>
                                <%- songGimmick.isCleansable
                                        ? lang.gimmicks.song_gimmick_cleansable_yes
                                        : lang.gimmicks.song_gimmick_cleansable_no %>
                            </div>
                        </div>
                    <% } %>
                <% } else { %>
                    <%- lang.gimmicks.no_gimmick %>
                <% } %>
            </div>
        </div>
        <% for (const noteGimmick of noteGimmicks) { %>
            <div data-gimmick="<%- noteGimmick.index %>" class="gimmick">
                <div><%- lang.gimmicks.note_gimmick %> <%- noteGimmick.index + 1 %></div>
                <div>
                    <%- lang.noteGimmick(noteGimmick.gimmick.trigger, noteGimmick.gimmick.effect_type,
                            noteGimmick.gimmick.effect_amount, noteGimmick.gimmick.target,
                            noteGimmick.gimmick.finish_type, noteGimmick.gimmick.finish_amount) %>
                    <% if (hasNoteMap) { %>
                        <br><b><%- lang.gimmicks.note_gimmick_amount %>:</b> <%- lang.noteCount(noteGimmick.count) %>
                        <% if (noteGimmick.hasSlotCounts) { %>
                            <div class="ng-slotbutton-container">
                                <%- noteGimmick.slotCounts.map((c, i) => c > 0
                                        ? "<span class='slot' data-slot='" + i + "'>" + lang.gimmicks.note_gimmick_unit
                                        + " " + (i + 1) + " ×" + c + "</span>"
                                        : null).filter(c => c !== null).join(" ") %>
                            </div>
                        <% } %>
                        <div class="ng-position-container">
                            <b><%- lang.gimmicks.note_gimmick_position %></b>: <span class="ng-position"></span>
                            <div class="ng-slot-container">
                                (<%- lang.gimmicks.note_gimmick_unit %> <span class="ng-slot"></span>)
                            </div>
                        </div>
                    <% } %>
                </div>
            </div>
        <% } %>
    </div>
    <div class="col l6 detailinfo">
        <h5><%- lang.appeal_chances.title %></h5>
        <% for (const ac of appealChances) { %>
            <div data-ac="<%- ac.index %>" class="appealchance <%- ac.cssClass %>">
                <div><%- lang.appeal_chances.ac %> <%- ac.index + 1 %>: <%- ac.mission %></div>
                <div>
                    <%- ac.hasGimmick
                            ? lang.acGimmick(ac.gimmick.trigger, ac.gimmick.effect_type, ac.gimmick.effect_amount,
                                    ac.gimmick.target, ac.gimmick.finish_type, ac.gimmick.finish_amount)
                            : lang.gimmicks.no_gimmick %>
                    <% if (hasNoteMap) { %>
                        <br>
                        <b><%- lang.appeal_chances.ac_length %>:</b> <%- lang.noteCount(ac.noteCount) %>
                        <% if (ac.hasPerNoteInfo) { %>
                            <%- ac.perNoteInfo %>
                        <% } %>
                        <div class="row nomargin">
                            <div class="col m6 no-padding"><b><%- lang.appeal_chances.ac_reward_voltage_label %>:</b>
                                <%- ac.rewardVoltage %> <%- lang.appeal_chances.ac_reward_voltage %></div>
                            <div class="col m6 no-padding"><b><%- lang.appeal_chances.ac_penalty_damage_label %>:</b>
                                <%- ac.penaltyDamage %> <%- lang.appeal_chances.ac_penalty_damage %> </div>
                        </div>
                    <% } %>
                </div>
            </div>
        <% } %>
    </div>
</div>